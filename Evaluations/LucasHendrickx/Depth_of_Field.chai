
def material(c)
{
  Materials.uniform( [ "ambient": c ] )
}

def scene_at(now)
{

  // var t = Animations.animate(0, 18, seconds(3))[now]
  var lookat = Animations.animate( pos(0,0,0), pos(0,0,-21), seconds(3) )[now]


  var camera = Cameras.depthoffieldperspective( [ "eye": pos(0, 0, 5),
                                         "look_at": lookat,
                                         "up": vec(0, 1, 0),
                                         "distance": 1,
                                         "aspect_ratio": 1,
                                         "eye_size": 0.5,
                                         "sampler": Samplers.multijittered(10) ] )
                                      
  var red_sphere_material = Materials.uniform([ "ambient": Colors.red() ])
  var blue_sphere_material = Materials.uniform([ "ambient": Colors.blue() ])
  var green_sphere_material = Materials.uniform([ "ambient": Colors.green() ])                                    
                                      
  var primitives = []
	primitives.push_back( translate(vec(-1, 0,  0), decorate( red_sphere_material  , sphere()) ) )
	primitives.push_back( translate(vec( 0, 1,-9), decorate( green_sphere_material, sphere()) ) )
    primitives.push_back( translate(vec( 1,-1,-18), decorate( blue_sphere_material , sphere()) ) )


  var root = union( primitives )

  var lights = [ ]

  var scene = create_scene(camera, root, lights)
}

var raytracer   = Raytracers.v1()

var renderer    = Renderers.standard( [ "width": 200,
                                        "height": 200,
                                        "sampler": Samplers.single(),
                                        "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(3)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout()] )