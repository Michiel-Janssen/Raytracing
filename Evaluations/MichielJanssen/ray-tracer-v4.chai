def scene_at(now)
{
	var animate = Animations.animate(0, 20, seconds(5))
	
	var camera = Cameras.perspective( [ "eye": pos(0,animate[now], 5),
                                    "look_at": pos(0, 0, 0) ] )
                                    
    var sphere_material_red = Materials.uniform( [ "ambient": Colors.red() * 0.1, "diffuse": Colors.red() * 0.9, "specular": Colors.white() * 0.5, "specular_exponent": 10 ] )
    
    var back_wall_material = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                                "diffuse": Colors.white() * 0.8 ] )
    
    var primitives = []
  	primitives.push_back( translate(vec(10, 0, 0), decorate(back_wall_material, yz_plane())) )
  	primitives.push_back( translate(vec(-10, 0, 0), decorate(back_wall_material, yz_plane())) )
  	
  	for (var i = -10; i < 10; ++i)
  	{
  		primitives.push_back( translate(vec(-2,0,i*3), decorate(sphere_material_red, sphere())) )
  		primitives.push_back( translate(vec(2,0, i*3), decorate(sphere_material_red, sphere())) )
  	}
  	var root = union(primitives)
  	
var lights = [ Lights.omnidirectional( pos(0, 3.5,1), Colors.white() ),
				Lights.omnidirectional( pos(0,-3.5,1), Colors.white() )]

var scene = create_scene(camera, root, lights)
}
var raytracer = Raytracers.v4()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.single(),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )