def scene_at(now)
{

var animate = Animations.animate(0, -1, seconds(5))

var camera = Cameras.perspective( [ "eye": pos(0,4.5,0.1),
                                    "look_at": pos(0,0,0) ] )


var red = Materials.uniform( ["ambient": Colors.red() * 0.1,
                                             "diffuse": Colors.red() * 0.8,
                                             "light_filtering": Colors.red() ] )

var blue = Materials.uniform( [ "ambient": Colors.blue() * 0.1,
                                             "diffuse": Colors.blue() * 0.8,
                                             "light_filtering": Colors.blue() ] )

                                             
  var floor_material = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                            "diffuse": Colors.white() * 0.8 ] )


  var small_sphere_material = Materials.uniform( [ "ambient": Colors.white() * 0.1,
                                                   "diffuse": Colors.white() * 0.8 ] )


  var primitives = []
  primitives.push_back( translate(vec(0, animate[now]-0.25,0), decorate(floor_material, xz_plane())) )
  primitives.push_back( translate(vec(1.75,0,0), decorate(blue, sphere())) )
  primitives.push_back( translate(vec(-1.75,0,0), decorate(red, sphere())) )

var root = union(primitives)

var lights = [ Lights.omnidirectional( pos(6,6,0), Colors.white() )
,				Lights.omnidirectional( pos(-6,6,0), Colors.white())
]

var scene = create_scene(camera, root, lights)
}
var raytracer = Raytracers.v5()

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.single(),
                                     "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(5)),
          [ Pipeline.animation(30),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )